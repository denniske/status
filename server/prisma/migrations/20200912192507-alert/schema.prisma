// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url = "***"
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "darwin", "debian-openssl-1.1.x"]
}

model Group {
  id           Int      @default(autoincrement()) @id
  name         String

  components   Component[]
  metrics      Metric[]
}


model Component {
  id                Int      @default(autoincrement()) @id

  groupId           Int
  group             Group    @relation(fields: [groupId], references: [id])

  name              String
  statusUrl         String
  delayInMinutes    Int      @default(1)
  status            Status[]
}

model Status {
  componentId    Int
  component      Component   @relation(fields: [componentId], references: [id])

  date           DateTime
  available      Boolean
  responseTime   Float?      @default(100)

  @@id([componentId, date])
}


model Metric {
  id                Int      @default(autoincrement()) @id

  groupId           Int
  group             Group    @relation(fields: [groupId], references: [id])

  name              String
  url               String
  path              String
  delayInMinutes    Int      @default(1)
  values            Value[]
}

model Value {
  metricId     Int
  metric       Metric   @relation(fields: [metricId], references: [id])

  date         DateTime
  value        Float?

  @@id([metricId, date])
}

model Alert {
  id                Int          @default(autoincrement()) @id

  componentId       Int?
  component         Component?   @relation(fields: [componentId], references: [id])
  metricId          Int?
  metric            Metric?      @relation(fields: [metricId], references: [id])

  condition         String
  activated         Boolean
}
